- name: Encrypt the secret files in the secret-files directory and store them in the file "vault"
  # each file in the secret-files directory will be converted to a base64 string,
  # then added to file "vault.yaml" as a first level variable whose name is "secret_<filename>".
  # Then we use ansible-vault to encrypt the file, move it to group_vars/local, and add it to git.

  hosts: local
  gather_facts: no
  tasks:

  - name: clean up old files
    file:
      path: "{{ inventory_dir }}/group_vars/local/vault.yaml"
      state: absent

    # vault.yaml creates a variable "secret_files" that is a hash like this:

    # secret_files:
    #   file_42: "---base64 encoded string---"
    #   another_file: "..another base64 encoded string representing the file's contents..."
    #   ...

  - name: create secrets file "vault.yaml"
    file:
      path: "{{ inventory_dir }}/secret-files/temp"
      state: directory

  - copy:
      dest: "{{ inventory_dir }}/secret-files/temp/vault.yaml"
      content: "secret_files:\n"

  - name: add entries to vault.yaml representing the secret files
    # note: have to use linux/osx base64 command because Ansible lookup('file') does not preserve final newline character
    shell: "echo \"  {{ item | basename }}: $(base64 < {{ item }})\" >> {{ inventory_dir }}/secret-files/temp/vault.yaml"
    with_fileglob:
    - "{{ inventory_dir }}/secret-files/*"

  - name: Encrypt the vault.yaml file, move it to group_vars
    command: "{{ item }}"
    with_items:
    - "ansible-vault encrypt --vault-password-file={{ inventory_dir }}/vault-password {{ inventory_dir }}/secret-files/temp/vault.yaml"
    - "mv {{ inventory_dir }}/secret-files/temp/vault.yaml {{ inventory_dir }}/group_vars/local/vault.yaml"
    - "rm -r {{ inventory_dir }}/secret-files/temp"

  - include: roles/misc/tasks/add-to-git.yaml

