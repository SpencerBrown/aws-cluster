- name: deploy CoreOS instance
  hosts: local
  gather_facts: false

  vars_files:
  - coreos-vars.yaml
  - aws-keys.yaml

  tasks:

#  - debug: var=inventory_dir

#  - name: Get CoreOS AMI list to file
#    get_url:
#      url: http://{{ coreos_channel }}.release.core-os.net/amd64-usr/current/coreos_production_ami_all.json
#      dest: "{{ inventory_dir }}/coreos_amis.json"

  - name: Get CoreOS AMI list to string
    uri:
      url: http://{{ coreos_channel }}.release.core-os.net/amd64-usr/current/coreos_production_ami_all.json
      return_content: yes
    register: coreos_amis_json

  - name: get the desired AMI
    set_fact:
      coreos_ami: "{{ ((coreos_amis_json.content | from_json).amis | selectattr('name', 'equalto', coreos_region) | map(attribute=coreos_ami_type) | list)[0] }}"

  - debug: msg="CoreOS {{ coreos_channel }} {{ coreos_ami_type }} AMI for region {{ coreos_region }} found. ID {{ coreos_ami }}"

  - name: Create a keypair
    ec2_key:
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      name: avametric
      key_material: "{{ item }}"
    with_file: ~/.ssh/avametric.pub

#  - name: Create a VPC
#    ec2_vpc:
#      region: "{{ coreos_region }}"
#      aws_access_key: "{{ aws_access_key }}"
#      aws_secret_key: "{{ aws_secret_key }}"
#      cidr_block: "172.20.0.0/16"
#      internet_gateway: yes
#
#      subnets:
#
#      - cidr: 172.20.0.0/16
#        az: "{{ coreos_zone }}"
#        resource_tags:
#          Name: Avametric-Test-Public
#          Avametric: Public
#
#      - cidr: 172.20.1.0/16
#        az: "{{ coreos_zone }}"
#        resource_tags:
#          Name: Avametric-Test-Private
#          Avametric: Private
#          KubernetesCluster: Test
#
#      route_tables:
#
#      - subnets:
#        - 172.20.0.0/24
#        routes:
#        - dest: 0.0.0.0/0
#          gw: igw
#
#      - subnets:
#        - 172.20.1.0/24
#        routes:
#          - dest: 172.20.0.0/16
#
#      resource_tags:
#        Name: Avametric-Test
#        Avametric: Test
#        KubernetesCluster: Test
#      state: present
#    register: avametric_vpc

#  - debug: var=avametric_vpc

  - name: Create a VPC
    ec2_vpc_net:
      name: Test-Avametric
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      cidr_block: "172.20.0.0/16"
      tags:
        Avametric: Test
        KubernetesCluster: Test
      state: present
    register: avametric_vpc

  - debug: var=avametric_vpc
  - debug: msg="Avametric VPC created. ID {{ avametric_vpc.vpc.id }}"
    when: avametric_vpc.changed
  - debug: msg="Avametric VPC already exists. ID {{ avametric_vpc.vpc.id }}"
    when: not avametric_vpc.changed

  - name: Create an Internet Gateway
    ec2_vpc_igw:
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      vpc_id: "{{ avametric_vpc.vpc.id }}"
      state: present
    register: avametric_igw

  - debug: var=avametric_igw
  - debug: msg="Avametric Internet Gateway created. ID {{ avametric_igw.gateway_id }}"
    when: avametric_igw.changed
  - debug: msg="Avametric Internet Gateway already exists. ID {{ avametric_igw.gateway_id }}"
    when: not avametric_igw.changed

  - name: create public subnet
    ec2_vpc_subnet:
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      vpc_id: "{{ avametric_vpc.vpc.id }}"
      cidr: "172.20.0.0/24"
      tags:
        Name: Test-Avametric-Public
        Avametric: Test
        #KubernetesCluster: Test
      state: present
    register: avametric_subnet_public

  - debug: var=avametric_subnet_public
  - debug: msg="Avametric public subnet created. ID {{ avametric_subnet_public.subnet.id }}"
    when: avametric_subnet_public.changed
  - debug: msg="Avametric public subnet already exists. ID {{ avametric_subnet_public.subnet.id }}"
    when: not avametric_subnet_public.changed

  - name: create private subnet
    ec2_vpc_subnet:
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      vpc_id: "{{ avametric_vpc.vpc.id }}"
      cidr: "172.20.1.0/24"
      tags:
        Name: Test-Avametric-Private
        Avametric: Test
        KubernetesCluster: Test
      state: present
    register: avametric_subnet_private

  - debug: var=avametric_subnet_private
  - debug: msg="Avametric private subnet created. ID {{ avametric_subnet_private.subnet.id }}"
    when: avametric_subnet_private.changed
  - debug: msg="Avametric private subnet already exists. ID {{ avametric_subnet_private.subnet.id }}"
    when: not avametric_subnet_private.changed

  - name: create public route table
    ec2_vpc_route_table:
      region: "{{ coreos_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      vpc_id: "{{ avametric_vpc.vpc.id }}"
      route_table_id:
      tags:
        Name: Test-Avametric-Public
        Avametric: Test
        #KubernetesCluster: Test
      state: present
    register: avametric_subnet_private

  - debug: var=avametric_subnet_private
  - debug: msg="Avametric private subnet created. ID {{ avametric_subnet_private.subnet.id }}"
    when: avametric_subnet_private.changed
  - debug: msg="Avametric private subnet already exists. ID {{ avametric_subnet_private.subnet.id }}"
    when: not avametric_subnet_private.changed

#  - name: Create an instance
#    ec2:
#      region: "{{ coreos_region }}"
#      aws_access_key: "{{ aws_access_key }}"
#      aws_secret_key: "{{ aws_secret_key }}"
#      key_name: avametric
#      instance_type: t2.micro
#      image: "{{ coreos_ami }}"
#      wait: no
#      count: 1
#      instance_tags:
#        Name: Avametric-Test
#        Avametric: Test
#      assign_public_ip: yes



